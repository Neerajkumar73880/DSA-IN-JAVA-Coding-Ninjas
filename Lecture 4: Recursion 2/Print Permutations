Given an input string (STR), print all possible permutations of the input string.
Note:
The input string may contain the same characters, so there will also be the same permutations.
The order of permutations doesnâ€™t matter.
Input Format:
The only input line contains a string (STR) of alphabets in lower case
Output Format:
Print each permutations in a new line
Constraint:
1<=length of STR<=8
Time Limit: 1sec
Sample Input 1:
cba
Sample Output 1:
abc
acb
bac
bca
cab
cba
















*******************************************************************************************************************************************************



















public class Solution {
    
      public static void FindPermutations(String str,String output) {
		// Write your code here
          if(str.length()==0){
              System.out.println(output);
              return ;
          }
        for(int i=0;i<str.length() ;i++){
            char ch=str.charAt(i);
            String outstr=output+ch;
            StringBuffer s=new StringBuffer(str);
            
            s.delete(i,i+1);
            FindPermutations(s.toString(),outstr);
            
        }
        
        

	   }
    
	public static void FindPermutations(String str) {
		// Write your code here
        FindPermutations(str,"");
        
        

	}
}
